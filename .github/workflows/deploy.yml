name: Test, Build, Deploy

on:
  push:
    branches:
      - '**'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: yarn install --frozen-lockfile && sleep 100 && yarn test
  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: yarn install --frozen-lockfile
      - run: yarn add sharp --ignore-engines
      - run: yarn test:e2e
  test-coverage:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: yarn install --frozen-lockfile
      - run: yarn test:cov
      - uses: actions/upload-artifact@master
        with:
          name: coverage
          path: coverage
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: yarn install --frozen-lockfile
      - run: yarn lint
  version-bump:
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]') && github.ref == 'refs/heads/main'"
    runs-on: ubuntu-latest
    needs: [lint, test, test-e2e]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{secrets.PAT}}
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: |
          git config --global user.name 'Johannes Jahn'
          git config --global user.email 'johannes.jahn@outlook.com'
          npm version patch -m "[RELEASE] %s"
          git push
          git push --tags
  build:
    runs-on: ubuntu-latest
    needs: [lint, test, test-e2e]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: yarn
      - run: yarn build
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r dist.zip dist
      - uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist.zip
  build-image:
    if: startsWith(github.event.head_commit.message, '[RELEASE]') && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint, test, test-e2e]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: johannesjahn/chat-api:latest
  deploy:
    if: startsWith(github.event.head_commit.message, '[RELEASE]') && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: chat.johannes-jahn.com
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: cd chat-api && docker compose pull && docker compose up -d chat && yes | docker image prune -a
