name: Test, Build, Deploy

on: push

jobs:
  run_tests:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: c-hive/gha-yarn-cache@v2
      - run: yarn install
      - run: yarn test
  run_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: c-hive/gha-yarn-cache@v2
      - run: yarn install
      - run: yarn lint
  version_bump:
    runs-on: ubuntu
    needs: [run_lint]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{secrets.PAT}}
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: |
        git config --global user.name 'Johannes Jahn'
        git config --global user.email 'johannes.jahn@outlook.com'
        npm version patch
        git push
  build:
    runs-on: ubuntu-latest
    needs: [version_bump]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: c-hive/gha-yarn-cache@v2
      - run: yarn install
      - run: yarn build
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r dist.zip dist
      - uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist.zip
  build_image:
    runs-on: ubuntu-latest
    needs: [version_bump]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: johannesjahn/chat-api:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_image
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: chat.johannes-jahn.com
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: cd chat-api && docker-compose pull && docker-compose up -d chat && YES | docker image prune -a
