apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: database
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: database
          image: postgres:latest
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: chat-api-config
          env:
            - name: POSTGRES_PASSWORD
              value: 'chat'
            - name: POSTGRES_USER
              value: 'chat'
            - name: POSTGRES_DB
              value: 'chat'
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
spec:
  selector:
    app: adminer
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
        - name: adminer
          image: adminer:latest
          ports:
            - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-api
  template:
    metadata:
      labels:
        app: chat-api
    spec:
      volumes:
        - name: env-file
          hostPath:
            path: /Users/johannesjahn/dev/chat-api/.dev.env
      containers:
        - name: chat-api
          image: johannesjahn/chat-api
          command:
            - bash
            - -c
            - 'node dist/main.js'
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: env-file
              mountPath: /usr/app/.env
